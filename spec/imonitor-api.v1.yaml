openapi: 3.0.0
info:
  title: imonitor-api
  version: '1.0'
servers:
  - url: 'http://api.puroong.me'
paths:
  /v1/auth/sign-in:
    parameters: []
    post:
      summary: 로그인
      operationId: post-auth-sign-in
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    type: string
                    description: "jwt 토큰입니다\napi 서버에 전달할 땐\n`{tokenType} [accessToken]`값을 \nAuthorzation 헤더를 통해 전달합니다. \n\nex.\nAuthorization: Bearer sakdfjalsdf.asdfjklsadjf.fjdasklf"
                  refreshToken:
                    type: string
                    description: 'accessToken이 만료되었을 때 사용합니다 '
                  tokenType:
                    type: string
                    description: 토큰 타입
                    example: Bearer
                  userInfo:
                    $ref: '#/components/schemas/UserInfo'
                required:
                  - accessToken
                  - refreshToken
                  - tokenType
                  - userInfo
              examples:
                example-1:
                  value:
                    accessToken: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9
                    refreshToken: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9
                    tokenType: Bearer
                    userInfo:
                      id: '20202020'
                      name: 홍길동
                      major: 수학과
                example-2:
                  value:
                    accessToken: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9
                    refreshToken: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9
                    tokenType: Bearer
                    userInfo:
                      id: '20202021'
                      name: 전우치
                      major: 수학과
        '404':
          description: |-
            Not Found
            사용자 정보가 존재하지 않을 때입니다
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
              examples:
                example-1:
                  value:
                    message: User Not Found
      description: 로그인 하는 API
      parameters: []
      tags:
        - auth
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                password:
                  type: string
              required:
                - id
                - password
            examples:
              example-1:
                value:
                  id: '20202020'
                  password: 9f86d081884c7d659a2feaa0c55ad015a3bf4f1b2b0b822cd15d6c15b0f00a08
  /v1/auth/refresh-token:
    post:
      summary: 토큰 재발급
      tags:
        - auth
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    type: string
                    description: "jwt 토큰입니다\napi 서버에 전달할 땐\n`{tokenType} [accessToken]`값을 \nAuthorzation 헤더를 통해 전달합니다. \n\nex.\nAuthorization: Bearer sakdfjalsdf.asdfjklsadjf.fjdasklf"
                  refreshToken:
                    type: string
                    description: 'accessToken이 만료되었을 때 사용합니다 '
                  tokenType:
                    type: string
                    description: 토큰 타입
                    example: Bearer
                  userInfo:
                    $ref: '#/components/schemas/UserInfo'
                required:
                  - accessToken
                  - refreshToken
                  - tokenType
                  - userInfo
              examples:
                example-1:
                  value:
                    accessToken: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9
                    refreshToken: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9
                    tokenType: Bearer
                    userInfo:
                      id: '20202020'
                      name: 홍길동
                      major: 수학과
                example-2:
                  value:
                    accessToken: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9
                    refreshToken: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9
                    tokenType: Bearer
                    userInfo:
                      id: '20202021'
                      name: 전우치
                      major: 수학과
        '401':
          description: |-
            Unauthorized
            Authorization 헤더가 없는 경우
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples:
                example-1:
                  value:
                    message: Unauthorized Error
        '403':
          description: |-
            Forbidden
            refreshToken이 만료된 경우
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples:
                example-1:
                  value:
                    message: Forbidden Error
      operationId: get-auth-refresh-token
      description: 'accessToken이 만료됐을 때 사용합니다 '
      parameters:
        - schema:
            type: string
            example: Bearer dflkasdjfl.fkldsajflk.fdsajflk
          in: header
          name: Authorization
          description: refresh token
          required: true
    parameters: []
  /v1/exams:
    post:
      summary: 새로운 시험 등록
      operationId: post-exams
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  exam:
                    $ref: '#/components/schemas/DetailedExamInfo'
              examples:
                example-1:
                  value:
                    exam:
                      id: 2
                      title: 선형대수 중간고사
                      notice: 온라인 시험입니다
                      courseName: 선형대수
                      courseCode: '20202020'
                      startTime: '2020-08-11T08:00:00'
                      endTime: '2020-08-11T10:00:00'
                      owner:
                        id: 1
                        name: 홍길동
                        major: 수학과
                      questions:
                        - id: 1
                          question: 문제1
                          type: CHOICE
                          choices:
                            - id: 1
                              content: 답1
                              order: 1
                            - id: 2
                              content: 답2
                              order: 2
                            - id: 3
                              content: 답3
                              order: 3
                            - id: 4
                              content: 답4
                              order: 4
                            - id: 5
                              content: 답5
                              order: 5
                        - id: 2
                          question: 문제2
                          type: SHORT_ANSWER
        '401':
          description: |-
            Unauthorized
            access token이 없거나 만료되었을 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example-1:
                  value:
                    message: Unauthorized Error
        '403':
          description: |-
            Forbidden
            시험을 등록할 수 있는 권한이 없는 경우
            (EXAMIER만 등록 가능)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example-1:
                  value:
                    message: Forbidden Error
      description: 새로운 시험 등록
      parameters:
        - schema:
            type: string
            example: Bearer dflkasdjfl.fkldsajflk.fdsajflk
          in: header
          name: Authorization
          description: access token
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewExamForm'
        description: ''
      tags:
        - exam
    get:
      summary: 시험 목록 조회
      operationId: get-exams
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  exams:
                    type: array
                    items:
                      $ref: '#/components/schemas/SimplifiedExamInfo'
              examples:
                example-1:
                  value:
                    exams:
                      - id: 1
                        title: 해석학 중간고사
                        notice: 오픈북 시험입니다
                        courseName: 해석학
                        courseCode: '20202020'
                        startTime: '2020-08-11T08:00:00'
                        endTime: '2020-08-11T10:00:00'
                        owner:
                          id: 1
                          name: 홍길동
                          major: 수학과
                        questions:
                          - id: 1
                            question: 문제1
                            type: CHOICE
                            choices:
                              - id: 1
                                content: 답1
                                order: 1
                              - id: 2
                                content: 답2
                                order: 2
                              - id: 3
                                content: 답3
                                order: 3
                              - id: 4
                                content: 답4
                                order: 4
                              - id: 5
                                content: 답5
                                order: 5
                          - id: 2
                            question: 문제2
                            type: SHORT_ANSWER
                      - id: 2
                        title: 선형대수 중간고사
                        notice: 온라인 시험입니다
                        courseName: 선형대수
                        courseCode: '20202020'
                        startTime: '2020-08-11T08:00:00'
                        endTime: '2020-08-11T10:00:00'
                        owner:
                          id: 1
                          name: 홍길동
                          major: 수학과
                        questions:
                          - id: 1
                            question: 문제1
                            type: CHOICE
                            choices:
                              - id: 1
                                content: 답1
                                order: 1
                              - id: 2
                                content: 답2
                                order: 2
                              - id: 3
                                content: 답3
                                order: 3
                              - id: 4
                                content: 답4
                                order: 4
                              - id: 5
                                content: 답5
                                order: 5
                          - id: 2
                            question: 문제2
                            type: SHORT_ANSWER
        '401':
          description: |-
            Unauthorized
            access token이 없거나 만료되었을 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example-1:
                  value:
                    message: Unauthorized Error
      description: 시험 목록 조회
      parameters:
        - schema:
            type: string
            example: Bearer sdjkflsdf.sdjfklsdjfklsdsdjflksdf.dsfjlksdf
          in: header
          name: Authorization
          description: access token
          required: true
        - schema:
            type: string
          in: query
          name: coursecode
          description: 과목 코드
        - schema:
            type: string
          in: query
          name: title
          description: 시험 제목
        - schema:
            type: string
          in: query
          name: coursename
          description: 과목명
        - schema:
            type: integer
          in: query
          name: limit
          description: ''
        - schema:
            type: integer
          in: query
          name: offset
      tags:
        - exam
    parameters: []
  '/v1/exams/{examId}':
    parameters:
      - schema:
          type: integer
        name: examId
        in: path
        required: true
        description: 시험 id
    get:
      summary: 특정 시험 정보 조회
      tags:
        - exam
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  exam:
                    $ref: '#/components/schemas/DetailedExamInfo'
              examples:
                example-1:
                  value:
                    exam:
                      id: 2
                      title: 선형대수 중간고사
                      notice: 온라인 시험입니다
                      courseName: 선형대수
                      courseCode: '20202020'
                      startTime: '2020-08-11T08:00:00'
                      endTime: '2020-08-11T10:00:00'
                      owner:
                        id: 1
                        name: 홍길동
                        major: 수학과
                      questions:
                        - id: 1
                          question: 문제1
                          type: CHOICE
                          choices:
                            - id: 1
                              content: 답1
                              order: 1
                            - id: 2
                              content: 답2
                              order: 2
                            - id: 3
                              content: 답3
                              order: 3
                            - id: 4
                              content: 답4
                              order: 4
                            - id: 5
                              content: 답5
                              order: 5
                        - id: 2
                          question: 문제2
                          type: SHORT_ANSWER
        '401':
          description: |-
            Unauthorized
            access token 없거나 만료됐을 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example-1:
                  value:
                    message: Unauthorized Error
        '403':
          description: |-
            Forbidden
            교수님이 허락한 학생만 시험을 볼 수 있음
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example-1:
                  value:
                    message: Forbbiden Error
      operationId: get-exams-examId
      description: 특정 시험 정보 조회
      parameters:
        - schema:
            type: string
            example: Bearer dfjaksdfhjakds.dsafjklasdjfl.dsfjklsdf
          in: header
          name: Authorization
          description: ''
          required: true
  /v1/auth/sign-up:
    post:
      summary: 회원가입
      operationId: post-auth-sign-up
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    type: string
                  refreshToken:
                    type: string
                  tokenType:
                    type: string
                  userInfo:
                    $ref: '#/components/schemas/UserInfo'
                required:
                  - accessToken
                  - refreshToken
                  - userInfo
                  - tokenType
              examples:
                example-1:
                  value:
                    accessToken: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9
                    refreshToken: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9
                    tokenType: Bearer
                    userInfo:
                      id: '20202020'
                      name: 홍길동
                      major: 수학과
                example-2:
                  value:
                    accessToken: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9
                    refreshToken: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9
                    tokenType: Bearer
                    userInfo:
                      id: '20202021'
                      name: 전우치
                      major: 수학과
      description: 회원가입
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignUpForm'
            examples: {}
        description: ''
      tags:
        - auth
    parameters: []
  '/v1/exams/{examId}/submit':
    parameters:
      - schema:
          type: string
        name: examId
        in: path
        required: true
        description: 시험 id
    post:
      summary: 시험 제출
      operationId: post-exams-examId-submit
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/SubmitResultInfo'
              examples:
                example-1:
                  value:
                    result:
                      - qna:
                          id: 1
                          question: 문제1
                          answer: 답1
                          type: SHORT_ANSWER
                        submittedAnwer: 답1
                        isCorrect: true
                      - qna:
                          id: 2
                          question: 문제2
                          answer: '3'
                          type: CHOICE
                          choices:
                            - id: 1
                              content: 답1
                              order: 1
                            - id: 2
                              content: 답2
                              order: 2
                            - id: 3
                              content: 답3
                              order: 3
                            - id: 4
                              content: 답4
                              order: 4
                            - id: 5
                              content: 답5
                              order: 5
                          submittedAnswer: '2'
                          isCorrect: 'false'
        '401':
          description: |-
            Unauthorized
            access token이 없거나 만료됐을 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example-1:
                  value:
                    message: Unauthorized Error
        '403':
          description: |-
            Forbidden
            교수님이 허락한 학생만 시험을 제출할 수 있음
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example-1:
                  value:
                    message: Forbidden Error
      description: 시험 제출
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: access token
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                sumbits:
                  type: array
                  items:
                    $ref: '#/components/schemas/NewSubmitForm'
      tags:
        - submit
  '/v1/users/{userId}/exams/{examId}/submit':
    parameters:
      - schema:
          type: string
        name: userId
        in: path
        required: true
      - schema:
          type: string
        name: examId
        in: path
        required: true
    get:
      summary: 시험 결과 조회
      tags:
        - submit
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/SubmitResultInfo'
                required:
                  - result
              examples:
                example-1:
                  value:
                    result:
                      - qna:
                          id: 1
                          question: 문제1
                          answer: 답1
                          type: SHORT_ANSWER
                        submittedAnwer: 답1
                        isCorrect: true
                      - qna:
                          id: 2
                          question: 문제2
                          answer: '3'
                          type: CHOICE
                          choices:
                            - id: 1
                              content: 답1
                              order: 1
                            - id: 2
                              content: 답2
                              order: 2
                            - id: 3
                              content: 답3
                              order: 3
                            - id: 4
                              content: 답4
                              order: 4
                            - id: 5
                              content: 답5
                              order: 5
                          submittedAnswer: '2'
                          isCorrect: 'false'
        '401':
          description: |-
            Unauthorized
            access token이 없거나 만료됐을 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example-1:
                  value:
                    message: Unauthorized Error
        '403':
          description: "Forbidden\n내가 제출한 시험 결과만 조회할 수 있음 "
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example-1:
                  value:
                    message: Forbidden Error
      operationId: get-users-userId-exams-examId-submit
      description: 시험 결과 조회
      parameters:
        - schema:
            type: string
            example: Bearer dklfajskdf.jskdlfjsdlkf.sdjfklsdf
          in: header
          name: Authorization
          description: acccess token
          required: true
components:
  schemas:
    UserInfo:
      title: UserInfo
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        major:
          type: string
      required:
        - id
        - name
        - major
      description: ''
    SimplifiedExamInfo:
      title: SimplifiedExamInfo
      type: object
      description: ''
      properties:
        id:
          type: integer
        owner:
          $ref: '#/components/schemas/UserInfo'
        title:
          type: string
        courseName:
          type: string
        courseCode:
          type: string
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
      required:
        - id
        - owner
        - title
        - courseName
        - courseCode
        - startTime
        - endTime
    DetailedExamInfo:
      title: SimplifiedExamInfo
      type: object
      properties:
        id:
          type: string
        owner:
          $ref: '#/components/schemas/UserInfo'
        title:
          type: string
        notice:
          type: string
        courseName:
          type: string
        courseCode:
          type: string
        startTime:
          type: string
          format: time
        endTime:
          type: string
          format: time
        questions:
          type: array
          items:
            $ref: '#/components/schemas/QuestionInfo'
      required:
        - id
        - owner
        - title
        - courseName
        - courseCode
        - startTime
        - endTime
        - questions
        - notice
    ErrorResponse:
      title: ErrorResponse
      type: object
      properties:
        message:
          type: string
      required:
        - message
    NewExamForm:
      title: NewExamForm
      type: object
      properties:
        title:
          type: string
          description: 시험 이름
        notice:
          type: string
          description: 시험 공지사항
        courseName:
          type: string
          description: 과목 이름
        courseCode:
          type: string
          description: 과목 코드
        startTime:
          type: string
          description: 시작 시간
        endTime:
          type: string
          description: 종료 시간
        qnas:
          type: array
          items:
            $ref: '#/components/schemas/NewQnaForm'
      required:
        - title
        - courseName
        - courseCode
        - startTime
        - endTime
        - qnas
        - notice
    NewQnaForm:
      title: NewQnaForm
      type: object
      properties:
        question:
          type: string
          description: '문제  '
        answer:
          type: string
          description: 답
      required:
        - question
        - answer
    QuestionInfo:
      title: QuestionInfo
      type: object
      properties:
        id:
          type: string
          description: qna id
        question:
          type: string
          description: 문제
        type:
          type: string
          description: 객관식 vs 주관식
          enum:
            - CHOICE
            - SHORT_ANSWER
        choices:
          type: array
          description: 객관식 선택지
          items:
            $ref: '#/components/schemas/AnswerChoiceInfo'
      required:
        - id
        - question
        - type
    SIgnInForm:
      title: SIgnInForm
      type: object
      properties:
        id:
          type: string
          description: '학번  '
        password:
          type: string
          description: 비밀번호
      required:
        - id
        - password
    SignUpForm:
      title: SignUpForm
      type: object
      properties:
        id:
          type: string
          description: 학번
        name:
          type: string
          description: 학생 이름
        password:
          type: string
          description: 비밀번호
        major:
          type: string
          description: 전공
      required:
        - id
        - password
        - major
        - name
    NewSubmitForm:
      title: NewSubmitForm
      type: object
      properties:
        qnaId:
          type: integer
          description: qna id
        answer:
          type: string
          description: 제출한 답
      required:
        - answer
        - qnaId
    SubmitResultInfo:
      title: SubmitResultInfo
      type: object
      properties:
        qna:
          $ref: '#/components/schemas/QnaInfo'
        submittedAnswer:
          type: string
        isCorrect:
          type: boolean
          description: 정답 여부
      required:
        - qna
        - submittedAnswer
        - isCorrect
    QnaInfo:
      title: QnaInfo
      type: object
      properties:
        id:
          type: integer
          description: qna id
        question:
          type: string
          description: 문제
        answer:
          type: string
        type:
          type: string
          enum:
            - CHOICE
            - SHORT_ANSWER
        choices:
          type: array
          description: 객관식 선택지
          items:
            $ref: ''
      required:
        - id
        - question
        - answer
        - type
    AnswerChoiceInfo:
      title: AnswerChoiceInfo
      type: object
      properties:
        id:
          type: string
          description: answer choice id
        content:
          type: string
          description: 객관식 선택지 내용
        order:
          type: integer
          description: 보기 순서
      required:
        - id
        - content
        - order
